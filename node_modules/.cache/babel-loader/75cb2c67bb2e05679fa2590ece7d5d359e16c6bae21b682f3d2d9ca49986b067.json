{"ast":null,"code":"import axios from \"axios\";\nlet axiosInstance = axios.create({\n  baseURL: '/binary',\n  headers: {\n    'Content-Type': 'multipart/form-data'\n  },\n  timeout: 1000\n});\naxiosInstance.interceptors.request.use(config => {\n  if (localStorage.token) {\n    config.headers['Authorization'] = localStorage.token;\n  }\n  return config;\n});\naxiosInstance.interceptors.response.use(res => {\n  return res.data;\n}, err => {\n  return err;\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","headers","timeout","interceptors","request","use","config","localStorage","token","response","res","data","err"],"sources":["/Users/a1807292313/GIT/CIRCLE_IWCA/src/api/binaryReq.js"],"sourcesContent":["import axios from \"axios\";\n\nlet axiosInstance = axios.create({\n     baseURL: '/binary',\n     headers: {\n          'Content-Type': 'multipart/form-data'\n     },\n     timeout: 1000\n})\n\naxiosInstance.interceptors.request.use(config => {\n     if(localStorage.token) {\n          config.headers['Authorization'] = localStorage.token\n     }\n     return config\n})\n\naxiosInstance.interceptors.response.use(res => {\n     return res.data\n}, err => {\n     return err\n}) \n\nexport default axiosInstance"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAIC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE;IACJ,cAAc,EAAE;EACrB,CAAC;EACDC,OAAO,EAAE;AACd,CAAC,CAAC;AAEFJ,aAAa,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EAC5C,IAAGC,YAAY,CAACC,KAAK,EAAE;IAClBF,MAAM,CAACL,OAAO,CAAC,eAAe,CAAC,GAAGM,YAAY,CAACC,KAAK;EACzD;EACA,OAAOF,MAAM;AAClB,CAAC,CAAC;AAEFR,aAAa,CAACK,YAAY,CAACM,QAAQ,CAACJ,GAAG,CAACK,GAAG,IAAI;EAC1C,OAAOA,GAAG,CAACC,IAAI;AACpB,CAAC,EAAEC,GAAG,IAAI;EACL,OAAOA,GAAG;AACf,CAAC,CAAC;AAEF,eAAed,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}