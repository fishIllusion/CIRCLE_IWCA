{"ast":null,"code":"import axios from \"axios\";\nconst JSON = 'application/json; charset=utf-8';\n\n// function request(postParameter) {\n//      let axiosInstance = axios.create({\n//           baseURL: '/api',\n//           headers: {\n//                'Content-Type': postParameter?postParameter:JSON\n//           },\n//           timeout: 2000\n//      })\n\n//      axiosInstance.interceptors.request.use(config => {\n//           if(localStorage.token) {\n//                config.headers['Authorization'] = localStorage.token\n//           }\n//             return config\n//      })\n\n//      axiosInstance.interceptors.response.use(res => {\n//           return res.data\n//      }, err => {\n//      }) \n\n//      return axiosInstance\n// }\n\n// const app = (postParameter, url, method) => {\n//      let axiosInstance = axios.create({\n//           baseURL: '/api',\n//           url,\n//           method,\n//           headers: {\n//                'Content-Type': postParameter?postParameter:JSON\n//           },\n//           timeout: 2000\n//      })\n\n//      axiosInstance.interceptors.request.use(config => {\n//           if(localStorage.token) {\n//                config.headers['Authorization'] = localStorage.token\n//           }\n//           return config\n//      })\n\n//      axiosInstance.interceptors.response.use(res => {\n//           return res.data\n//      }, err => {\n//      }) \n\n//      return axiosInstance\n// }\n// const app = request(url, method)\n\nlet axiosInstance = axios.create({\n  baseURL: '/api',\n  headers: {\n    'Content-Type': JSON\n  },\n  timeout: 1000\n});\naxiosInstance.interceptors.request.use(config => {\n  if (localStorage.token) {\n    config.headers['Authorization'] = localStorage.token;\n  }\n  return config;\n});\naxiosInstance.interceptors.response.use(res => {\n  return res.data;\n}, err => {\n  return err;\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","JSON","axiosInstance","create","baseURL","headers","timeout","interceptors","request","use","config","localStorage","token","response","res","data","err"],"sources":["/Users/a1807292313/GIT/CIRCLE_IWCA/src/api/request.js"],"sourcesContent":["import axios from \"axios\";\n\nconst JSON = 'application/json; charset=utf-8';\n\n// function request(postParameter) {\n//      let axiosInstance = axios.create({\n//           baseURL: '/api',\n//           headers: {\n//                'Content-Type': postParameter?postParameter:JSON\n//           },\n//           timeout: 2000\n//      })\n\n//      axiosInstance.interceptors.request.use(config => {\n//           if(localStorage.token) {\n//                config.headers['Authorization'] = localStorage.token\n//           }\n//             return config\n//      })\n\n//      axiosInstance.interceptors.response.use(res => {\n//           return res.data\n//      }, err => {\n//      }) \n\n//      return axiosInstance\n// }\n\n// const app = (postParameter, url, method) => {\n//      let axiosInstance = axios.create({\n//           baseURL: '/api',\n//           url,\n//           method,\n//           headers: {\n//                'Content-Type': postParameter?postParameter:JSON\n//           },\n//           timeout: 2000\n//      })\n\n//      axiosInstance.interceptors.request.use(config => {\n//           if(localStorage.token) {\n//                config.headers['Authorization'] = localStorage.token\n//           }\n//           return config\n//      })\n\n//      axiosInstance.interceptors.response.use(res => {\n//           return res.data\n//      }, err => {\n//      }) \n\n//      return axiosInstance\n// }\n// const app = request(url, method)\n\nlet axiosInstance = axios.create({\n     baseURL: '/api',\n     headers: {\n          'Content-Type': JSON\n     },\n     timeout: 1000\n})\n\naxiosInstance.interceptors.request.use(config => {\n     if(localStorage.token) {\n          config.headers['Authorization'] = localStorage.token\n     }\n     return config\n})\n\naxiosInstance.interceptors.response.use(res => {\n     return res.data\n}, err => {\n     return err\n}) \n\nexport default axiosInstance"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,IAAI,GAAG,iCAAiC;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAIC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC5BC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE;IACJ,cAAc,EAAEJ;EACrB,CAAC;EACDK,OAAO,EAAE;AACd,CAAC,CAAC;AAEFJ,aAAa,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EAC5C,IAAGC,YAAY,CAACC,KAAK,EAAE;IAClBF,MAAM,CAACL,OAAO,CAAC,eAAe,CAAC,GAAGM,YAAY,CAACC,KAAK;EACzD;EACA,OAAOF,MAAM;AAClB,CAAC,CAAC;AAEFR,aAAa,CAACK,YAAY,CAACM,QAAQ,CAACJ,GAAG,CAACK,GAAG,IAAI;EAC1C,OAAOA,GAAG,CAACC,IAAI;AACpB,CAAC,EAAEC,GAAG,IAAI;EACL,OAAOA,GAAG;AACf,CAAC,CAAC;AAEF,eAAed,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}