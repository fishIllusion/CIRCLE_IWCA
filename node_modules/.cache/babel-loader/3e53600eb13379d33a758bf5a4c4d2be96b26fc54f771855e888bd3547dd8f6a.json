{"ast":null,"code":"import { getServerInfo } from '../../api/index';\nimport store from '@/store';\nconst state = {\n  servers: {}\n};\nconst mutations = {\n  GETSERVERINFO(state, data) {\n    state.servers[data.sid] = data.data;\n  },\n  INITCATAGORY(state, data) {\n    // console.log(data);\n    data.forEach(item => {\n      state.servers[item.sid] = {\n        catagory: [],\n        directGroups: []\n      };\n    });\n  },\n  //当用户添加一个服务器时触发\n  ADDMORECATAGORY(state, data, sid) {\n    state.servers[sid];\n  }\n};\nconst actions = {\n  async getServerInfo({\n    commit\n  }, sid) {\n    await getServerInfo(sid).then(res => {\n      if (res.code == 200) {\n        commit('GETSERVERINFO', {\n          data: res.data,\n          sid\n        });\n        store.commit('GETSERVERNAME', res.data.sName);\n      }\n    });\n  }\n};\nexport default {\n  state,\n  actions,\n  mutations\n};","map":{"version":3,"names":["getServerInfo","store","state","servers","mutations","GETSERVERINFO","data","sid","INITCATAGORY","forEach","item","catagory","directGroups","ADDMORECATAGORY","actions","commit","then","res","code","sName"],"sources":["/Users/a1807292313/GIT/CIRCLE_IWCA/src/store/handler/serverDetails.js"],"sourcesContent":["import { getServerInfo } from '../../api/index'\nimport store from '@/store';\n\nconst state = {\n     servers: {\n\n     }\n}\n\nconst mutations = {\n     GETSERVERINFO(state, data) {\n          state.servers[data.sid] = data.data\n     },\n     INITCATAGORY(state, data) {\n          // console.log(data);\n          data.forEach(item => {\n               state.servers[item.sid] = {catagory: [], directGroups:[]}\n          });\n     },\n     //当用户添加一个服务器时触发\n     ADDMORECATAGORY(state, data, sid) {\n               state.servers[sid]\n     }\n}\n\n\nconst actions = {\n     async getServerInfo({commit}, sid) {\n          await getServerInfo(sid).then(res => {\n               if(res.code == 200) {\n                    commit('GETSERVERINFO', {data: res.data, sid})\n                    store.commit('GETSERVERNAME', res.data.sName)\n               }\n          })\n     }\n}\n\n\nexport default {\n     state, actions, mutations\n}"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,KAAK,MAAM,SAAS;AAE3B,MAAMC,KAAK,GAAG;EACTC,OAAO,EAAE,CAET;AACL,CAAC;AAED,MAAMC,SAAS,GAAG;EACbC,aAAaA,CAACH,KAAK,EAAEI,IAAI,EAAE;IACtBJ,KAAK,CAACC,OAAO,CAACG,IAAI,CAACC,GAAG,CAAC,GAAGD,IAAI,CAACA,IAAI;EACxC,CAAC;EACDE,YAAYA,CAACN,KAAK,EAAEI,IAAI,EAAE;IACrB;IACAA,IAAI,CAACG,OAAO,CAACC,IAAI,IAAI;MAChBR,KAAK,CAACC,OAAO,CAACO,IAAI,CAACH,GAAG,CAAC,GAAG;QAACI,QAAQ,EAAE,EAAE;QAAEC,YAAY,EAAC;MAAE,CAAC;IAC9D,CAAC,CAAC;EACP,CAAC;EACD;EACAC,eAAeA,CAACX,KAAK,EAAEI,IAAI,EAAEC,GAAG,EAAE;IACxBL,KAAK,CAACC,OAAO,CAACI,GAAG,CAAC;EAC5B;AACL,CAAC;AAGD,MAAMO,OAAO,GAAG;EACX,MAAMd,aAAaA,CAAC;IAACe;EAAM,CAAC,EAAER,GAAG,EAAE;IAC9B,MAAMP,aAAa,CAACO,GAAG,CAAC,CAACS,IAAI,CAACC,GAAG,IAAI;MAChC,IAAGA,GAAG,CAACC,IAAI,IAAI,GAAG,EAAE;QACfH,MAAM,CAAC,eAAe,EAAE;UAACT,IAAI,EAAEW,GAAG,CAACX,IAAI;UAAEC;QAAG,CAAC,CAAC;QAC9CN,KAAK,CAACc,MAAM,CAAC,eAAe,EAAEE,GAAG,CAACX,IAAI,CAACa,KAAK,CAAC;MAClD;IACL,CAAC,CAAC;EACP;AACL,CAAC;AAGD,eAAe;EACVjB,KAAK;EAAEY,OAAO;EAAEV;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}