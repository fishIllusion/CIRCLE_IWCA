{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useRouter } from 'vue-router';\nimport store from '@/store';\nimport { mapState } from 'vuex';\nimport { useState } from '../hooks/useState';\nimport { openContextMenu } from '@/utils/openMenu';\nimport { onMounted, reactive } from 'vue';\nimport inviteDialog from '../pages/invite.vue';\nimport { openInvite } from '../utils/openDialog';\nimport $bus from '@/utils/event_bus';\nreactive;\nexport default {\n  components: {\n    inviteDialog\n  },\n  setup() {\n    const {\n      isOpen,\n      openMenu,\n      closeMenu\n    } = openContextMenu();\n    const router = useRouter();\n    let useMap = useState(['serverDetails', 'middleData'], mapState); //获取store中存储的数据\n    const sid = router.currentRoute.value.params.sid; //获取服务器的sid\n    const {\n      openAction\n    } = openInvite('invite');\n    //定义该组件的方法\n    const methods = {\n      //获取当前服务器的信息\n      getServerInfo(sid) {\n        let num = 0;\n        for (let i in store.state.serverDetails.servers[sid]) {\n          num++;\n        }\n        if (num == 2) {\n          // console.log(store.state.serverDetails.servers[sid]);\n          store.dispatch('getServerInfo', sid);\n        }\n      },\n      goMes(gid, catagoryIndex, hidegroupIndex) {\n        store.commit('GETINDEXES', {\n          catagoryIndex,\n          hidegroupIndex\n        });\n        localStorage.GlobalBaseInfo = JSON.stringify({\n          catagoryIndex,\n          hidegroupIndex\n        });\n        router.push({\n          path: `/channels/server/${sid}/${gid}`\n        });\n      },\n      rightClick(event) {\n        event.preventDefault();\n        let x = event.clientX;\n        let y = event.clientY;\n        console.log(x, y);\n      }\n    };\n    methods.getServerInfo(sid);\n    onMounted(() => {\n      //当点击非gr_container的元素时，关闭黑窗口\n      window.onclick = e => {\n        if (e.srcElement.className != 'gr_container' && e.srcElement.className.indexOf('justOpen') == -1) {\n          closeMenu();\n        }\n      };\n      window.oncontextmenu = e => {\n        if (e.srcElement.className == 'room') {\n          return;\n        } else {\n          e.preventDefault();\n          closeMenu();\n        }\n      };\n      $bus.on('showDialog', () => {\n        openAction();\n        closeMenu();\n      });\n    });\n    // const goMes = (gid) => {\n    //      // let pid = uid < hostid?(uid + hostid):(hostid + uid)\n    //      // console.log(router.currentRoute.value.params);\n    //      router.push(`/channels/server/${sid}/${gid}`)\n    // }\n    return {\n      ...useMap,\n      ...methods,\n      sid,\n      store,\n      openContextMenu,\n      isOpen,\n      openMenu,\n      closeMenu,\n      openAction\n    };\n  }\n};","map":{"version":3,"names":["useRouter","store","mapState","useState","openContextMenu","onMounted","reactive","inviteDialog","openInvite","$bus","components","setup","isOpen","openMenu","closeMenu","router","useMap","sid","currentRoute","value","params","openAction","methods","getServerInfo","num","i","state","serverDetails","servers","dispatch","goMes","gid","catagoryIndex","hidegroupIndex","commit","localStorage","GlobalBaseInfo","JSON","stringify","push","path","rightClick","event","preventDefault","x","clientX","y","clientY","console","log","window","onclick","e","srcElement","className","indexOf","oncontextmenu","on"],"sources":["/Users/a1807292313/GIT/CIRCLE_IWCA/src/pages/serverAndRoom.vue"],"sourcesContent":["<template>\n     <div class=\"myPrivacy\" id=\"testPC\">\n          <div class=\"left\">\n               <div class=\"serverName\">\n                    <div class=\"wrap\">\n                         <span>{{ middleData.serverName }}</span>\n                         <img src=\"../assets/init-icon-pics/arrow-down-s-line.png\" alt=\"\">\n                    </div>\n               </div>\n               <!-- 设置聊天分类 -->\n               <div class=\"roomGroup\" v-for=\"(item, Index) in serverDetails.servers[sid].catagory\" :key=\"Index\">\n                    <div class=\"groupName\">\n                         <img src=\"../assets/init-icon-pics/arrow-down-s-line.png\" alt=\"\">\n                         <span>{{ item.cname }}</span>\n                    </div>\n                    <div class=\"groups\">\n                         <div class=\"container\" v-for=\"(element, index) in item.hideGroups\" :key=\"index\">\n                              <div class=\"room\" @click=\"goMes(111, Index, index)\" @contextmenu.prevent=\"openMenu\">\n                                   <span>{{ element.gname }}</span>\n                                   <i class=\"iconfont icon-yaoqing\" @click=\"openAction\"></i>\n                              </div>\n                         </div>\n                         <div class=\"split\" v-show=\"serverDetails.servers[sid].directGroups.length != 0\"></div>\n                    </div>\n               </div>\n               <!-- 直接聊天室 -->\n               <div class=\"container_single\" v-if=\"serverDetails.servers[sid].directGroups.length != 0\">\n                    <div class=\"room\" v-for=\"(item, index) in serverDetails.servers[sid].directGroups\">\n                         <span>#AZUR LANE</span>\n                    </div>\n               </div>\n          </div>\n          <div class=\"right\">\n               <router-view></router-view>\n          </div>\n          <inviteDialog />\n     </div>\n</template>\n\n<script>\nimport { useRouter } from 'vue-router'\nimport store from '@/store';\nimport { mapState } from 'vuex';\nimport { useState } from '../hooks/useState'\nimport { openContextMenu } from '@/utils/openMenu';\nimport { onMounted, reactive } from 'vue';\nimport inviteDialog from '../pages/invite.vue'\nimport { openInvite } from '../utils/openDialog'\nimport $bus from '@/utils/event_bus'\nreactive\nexport default {\n     components: {\n          inviteDialog\n     },\n     setup() {\n          const { isOpen, openMenu, closeMenu } = openContextMenu()\n          const router = useRouter()\n          let useMap = useState(['serverDetails', 'middleData'], mapState)//获取store中存储的数据\n          const sid = router.currentRoute.value.params.sid //获取服务器的sid\n          const { openAction } = openInvite('invite')\n          //定义该组件的方法\n          const methods = {\n               //获取当前服务器的信息\n               getServerInfo(sid) {\n                    let num = 0\n                    for (let i in store.state.serverDetails.servers[sid]) {\n                         num++\n                    }\n                    if (num == 2) {\n                         // console.log(store.state.serverDetails.servers[sid]);\n                         store.dispatch('getServerInfo', sid)\n                    }\n               },\n               goMes(gid, catagoryIndex, hidegroupIndex) {\n                    store.commit('GETINDEXES', { catagoryIndex, hidegroupIndex })\n                    localStorage.GlobalBaseInfo = JSON.stringify({ catagoryIndex, hidegroupIndex })\n                    \n                    router.push({\n                         path: `/channels/server/${sid}/${gid}`,\n                    })\n               },\n               rightClick(event) {\n                    event.preventDefault();\n                    let x = event.clientX;\n                    let y = event.clientY;\n                    console.log(x, y);\n               }\n          }\n          methods.getServerInfo(sid)\n          onMounted(() => {\n               //当点击非gr_container的元素时，关闭黑窗口\n               window.onclick = (e) => {\n                    if (e.srcElement.className != 'gr_container' && e.srcElement.className.indexOf('justOpen') == -1) {\n                         closeMenu()    \n                    }\n               }\n               window.oncontextmenu = (e) => {\n                    if(e.srcElement.className == 'room') {\n                         return \n                    }\n                    else{\n                         e.preventDefault()\n                         closeMenu()\n                    }\n               }\n               $bus.on('showDialog', () => {\n                    openAction()\n                    closeMenu()\n               })\n          })\n          // const goMes = (gid) => {\n          //      // let pid = uid < hostid?(uid + hostid):(hostid + uid)\n          //      // console.log(router.currentRoute.value.params);\n          //      router.push(`/channels/server/${sid}/${gid}`)\n          // }\n          return {\n               ...useMap, ...methods, sid, store, openContextMenu, isOpen, openMenu, closeMenu, openAction\n          }\n\n     }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.myPrivacy {\n     width: calc(100vw - 70px);\n     height: 100vh;\n     display: flex;\n\n     // position: relative;\n     .left {\n          width: 240px;\n          height: calc(100vh - 40px);\n          background-color: rgb(43, 45, 49);\n\n          .serverName {\n               width: 100%;\n               height: 48px;\n               border-bottom: 1px solid rgb(29, 29, 29);\n               display: flex;\n               justify-content: center;\n               align-items: center;\n               margin-bottom: 10px;\n\n               .wrap {\n                    width: 85%;\n                    height: 95%;\n                    // border: 1px solid #fff;\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    color: #fff;\n                    font-family: var(--nomal-font_family);\n               }\n          }\n\n          .roomGroup {\n               width: 100%;\n\n               .groupName {\n                    transition: .2s;\n                    width: 90%;\n                    height: 24px;\n                    color: rgb(148, 156, 164);\n                    display: flex;\n                    align-items: center;\n                    cursor: pointer;\n\n                    &:hover {\n                         color: #fff;\n                    }\n\n                    img {\n                         width: 24px;\n                         padding-left: 5px;\n                         // transform: rotateZ(270deg);\n                    }\n\n                    span {\n                         height: 24px;\n                         line-height: 24px;\n                         font-family: Montserrat-BlackItalic;\n                    }\n               }\n\n               .groups {\n\n                    margin-top: 5px;\n                    width: 100%;\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    justify-content: center;\n\n                    .container {\n                         width: 90%;\n                         height: 35px;\n                         display: flex;\n                         justify-content: center;\n                         align-items: center;\n                         border-radius: 5px;\n                         transition: .2s;\n                         cursor: pointer;\n                         &:hover {\n                              background-color: rgb(72, 73, 74);\n\n                              .room {\n                                   color: #fff;\n                              }\n                         }\n\n                         .room {\n                              width: 90%;\n                              font-family: var(--nomal-font_family);\n                              color: rgb(149, 150, 155);\n                              display: flex;\n                              justify-content: space-between;\n                              align-items: center;\n                              i {\n                                   transition: .3s;\n                                   &:hover {\n                                        font-size: 18px;\n                                   }\n                              }\n                         }\n                    }\n\n\n                    .split {\n                         width: 90%;\n                         height: 1px;\n                         background-color: rgb(100, 102, 105);\n                         margin: 10px 0;\n                    }\n               }\n          }\n\n          .container_single {\n               margin: 0 auto;\n               width: 80%;\n               height: 30px;\n               display: flex;\n               justify-content: center;\n               align-items: center;\n               border-radius: 8px;\n               transition: .4s;\n               cursor: pointer;\n\n               &:hover {\n                    background-color: rgb(53, 55, 61);\n               }\n\n               background-color: rgb(53, 55, 61);\n\n               .room {\n                    width: 90%;\n                    font-family: var(--nomal-font_family);\n                    color: #fff;\n               }\n          }\n     }\n\n     .right {\n          width: calc(100vw - 70px - 240px);\n          height: 100vh;\n          background-color: rgb(49, 51, 56);\n          // z-index: 1;\n\n          // .roomNavs {\n          //      width: 100%;\n          //      height: 48px;\n          //      border-bottom: 1px solid rgb(29, 29, 29);\n\n          //      .middle {\n          //           height: 48px;\n          //           margin: 0 auto;\n          //           width: 95%;\n          //           display: flex;\n          //           justify-content: space-between;\n          //           align-items: center;\n\n          //           .one {\n          //                height: 40px;\n          //                // border: 1px solid #fff;\n          //           }\n\n          //           .roomName {\n          //                min-width: 300px;\n\n          //                span {\n          //                     height: 40px;\n          //                     line-height: 40px;\n          //                     color: #fff;\n          //                     font-family: var(--nomal-font_family);\n          //                     font-size: 14px;\n          //                }\n          //           }\n\n          //           .taps {\n          //                min-width: 50%;\n          //           }\n          //      }\n\n          // }\n\n          // .one {\n          //      margin: 0 auto;\n          //      width: 95%;\n          // }\n\n          // .chatArea {\n          //      height: calc(96% - 48px - 66px - 18px);\n          //      // min-height: 50%;\n          //      // border: 1px solid #fff;\n          //      overflow: scroll;\n\n          //      .welcome {\n          //           display: flex;\n          //           flex-direction: column;\n\n          //           img {\n          //                margin: 15px 0;\n          //                width: 65px;\n          //                height: 65px;\n          //                border-radius: 50%;\n          //           }\n\n          //           span {\n          //                color: #fff;\n          //                font-family: var(--nomal-font_family);\n          //           }\n\n          //           .nickName {\n          //                font-size: 30px;\n          //           }\n\n          //           .userName {\n          //                font-size: 1.4rem;\n          //                margin: 10px 0;\n          //           }\n\n          //           p {\n          //                color: #b4b4b4;\n          //                font-weight: 500;\n          //           }\n          //      }\n\n          //      .split {\n          //           width: 100%;\n          //           height: 1px;\n          //           background-color: #fff;\n          //           margin: 20px 0;\n          //      }\n\n          //      .chatList {\n          //           width: 100%;\n          //           // height: 100%;\n          //           min-height: 0;\n\n          //           .oneMes {\n          //                display: flex;\n          //                margin-top: 20px;\n\n          //                .leftPart {\n          //                     height: inherit;\n\n          //                     img {\n          //                          width: 40px;\n          //                          height: 40px;\n          //                          object-fit: cover;\n          //                          border-radius: 50%;\n\n          //                     }\n          //                }\n\n          //                .rightPart {\n          //                     padding-left: 15px;\n          //                     height: 80%;\n          //                     display: flex;\n          //                     flex-direction: column;\n          //                     justify-content: center;\n\n          //                     .basicMes {\n          //                          min-height: 20px;\n\n          //                          .nickName {\n          //                               color: rgb(47, 201, 112);\n          //                               font-family: var(--nomal-font_family);\n          //                               margin-right: 10px;\n          //                          }\n\n          //                          .sendTime {\n          //                               color: #6f6e6e;\n          //                               font-size: 12px;\n          //                          }\n          //                     }\n\n          //                     .sendContent {\n          //                          color: #fff;\n          //                     }\n          //                }\n          //           }\n          //      }\n          // }\n\n          // .sendMes {\n          //      min-height: 44px;\n          //      border-radius: 8px;\n          //      box-shadow: 1px 1px 5px rgb(45, 45, 45);\n          //      background-color: rgb(56, 58, 64);\n          //      position: absolute;\n          //      bottom: 6%;\n          //      left: 50%;\n          //      transform: translateX(-50%);\n\n          //      .wrap {\n          //           min-height: 44px;\n          //           // border: 1px solid #fff;\n          //           width: 100%;\n          //           position: relative;\n\n          //           .outFile {\n          //                position: absolute;\n          //                top: 50%;\n          //                left: 40px;\n          //                transform: translate(-50%, -50%);\n          //                width: 25px;\n          //                height: 25px;\n          //                border-radius: 50%;\n          //                background-color: #a2a0a0;\n          //                display: flex;\n          //                justify-content: center;\n          //                align-items: center;\n\n          //                i {\n          //                     font-size: 20px;\n          //                     font-weight: bolder;\n          //                     color: #2c2c2c;\n          //                }\n          //           }\n          //      }\n\n          //      .input {\n          //           // border: 1px solid #fff;\n          //           width: 60%;\n          //           min-height: 44px;\n          //           position: absolute;\n          //           left: 70px;\n          //           bottom: 50%;\n          //           transform: translateY(50%);\n          //           color: #fff;\n          //           outline: none;\n          //           line-height: 44px;\n          //           max-height: 40vh;\n          //           overflow: scroll;\n\n          //           &:empty:before {\n          //                content: attr(placeholder);\n          //                color: #ccc;\n          //                font-family: var(--nomal-font_family);\n          //           }\n          //      }\n          // }\n     }\n}</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}